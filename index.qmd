---
title: "THC and CBD Analysis"
author:
  - name: Flower Power
    email: hola@flowerpower.com
    affiliations:
      - name: Flower Power
        address: Bogotá
        city: Bogotá
  - name: Figura 01
    email: hola@figura01.com
    affiliations:
      - name: Figura 01
        address: Bogotá
        city: Bogotá
date: "`r Sys.Date()`"
date-format: long
subtitle: "Data collection from Flower Power"
filters:
  - shinylive
format:
  html: 
    toc: true
    toc-title: "Table of Contents"
    theme: cosmo
    css: custom.css
    mainfont: "Montserrat"
    titlefont: "Playfair Display"
    monofont: "Fira Code"
echo: false
warning: false

---

# Introduction

We explore data from 533 cannabis samples collected between September 2020 and October 2024. (add more details about the data, who collected them, why people would want to know the THC and CBD levels of a sample, who were the producers, etc.) We examine what their distributions look like, and how the two compounds relate to each other.

```{r}
library(tidyverse)
library(readxl)
library(skimr)
library(showtext)
library(janitor)
library(shiny)
library(ggplot2)
library(shinylive)

# Add Google Fonts - using Playfair Display for headings and Lato for body text
font_add_google("Playfair Display", "playfair")
font_add_google("Lato", "lato")
showtext_auto()

# Define document background color to match CSS
doc_bg_color <- "#f8f9fa"

# Create a custom theme that matches document background
transparent_theme <- function() {
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = doc_bg_color, color = NA),
    plot.background = element_rect(fill = doc_bg_color, color = NA),
    text = element_text(family = "lato"),
    plot.title = element_text(family = "playfair", face = "bold", size = 14),
    axis.title = element_text(family = "playfair", size = 12),
    axis.text = element_text(family = "lato", size = 12)
  )
}
```

```{r}
power_data <- read_excel("GC-Results-Flower Power-Ground.xlsx")  |>
 clean_names()   |> 
 mutate(thc_total = case_when(
        thc_total == "< 0,2" ~ "0,2",
        TRUE ~ thc_total
    )) |> 
    mutate(thc_total = str_replace_all(thc_total, "<", "")) |>
    mutate(thc_total = str_replace_all(thc_total, ",", ".")) |>
    mutate(thc_total_num = as.numeric(thc_total)) |>
    mutate(cbd_total = case_when(
        cbd_total == "< 0,2" ~ "0,2",
        cbd_total == "<2,0 cuantas?" ~ "0,2",
        TRUE ~ cbd_total
    )) |> 
    mutate(cbd_total = str_replace_all(cbd_total, "<", "")) |>
    mutate(cbd_total = str_replace_all(cbd_total, ",", ".")) |>
    mutate(cbd_total_num = as.numeric(cbd_total)) |> 
    mutate(Date = as.POSIXct(time, format = "%m/%d/%Y %I:%M:%S %p"))  |> 
    filter(thc_total_num >= 4)

```

# Time of data collection

Our data spans a period from late 2020 to late 2024.


```{r}
power_data |> 
    mutate(Month = lubridate::floor_date(Date, unit = "month")) |>
    count(Month) |>
    mutate(Month = as.Date(Month)) |> 
    ggplot(aes(x = Month, y = n)) +
    geom_bar(stat = "identity", fill = "#003E42ff", alpha = 0.6) +
    transparent_theme() +
    labs(title = "Samples per Month",
         x = "Month",
         y = "Number of Samples") +
    scale_x_date(date_breaks = "1 month", date_labels = "%b %Y") +
    theme(axis.text.x = element_text(family = "lato", size = 8, angle = 90),
          panel.grid.major.x = element_blank(), 
          panel.grid.minor.x = element_blank())

ggsave("images/thc_time_series.png", width = 6, height = 4, dpi = 300)
```

# THC by time of data collection

When we look at the THC levels over time, we observed that samples collected in the most recent year tend to have higher THC concentrations. 

```{r}
power_data |> 
    ggplot(aes(x = Date, y = thc_total_num)) +
    geom_point(color = "#003E42ff", alpha = 0.6) +
    geom_smooth(color = "#EEC99Bff", fill = "#EEC99Bff", alpha = 0.3) +
    transparent_theme() +
    labs(title = "THC levels over time of data collection",
         x = "Date",
         y = "THC (%)") +
    theme(
          strip.background = element_rect(fill = "#EEC99Bff"),
          strip.text = element_text(color = "black", family = "playfair",
          face = "bold", size = 12))
ggsave("images/thc_time_series.png", width = 6, height = 4, dpi = 300)
```

This trend can be interpreted as an increase in THC levels over time, but it's important to consider potential sampling biases.^[If our data sources remained consistent throughout the collection period, we could attribute this to actual changes in cannabis cultivation practices. However, it's possible that our more recent samples disproportionately represent producers with advanced cultivation capabilities and greater resources, who can achieve higher THC concentrations.]

# Sample Locations

Our samples were collected from 15 different locations across Colombia, representing diverse geographical regions from coastal areas to inland territories. The interactive map below allows you to explore the sampling locations - you can zoom, pan, and click on markers to see location details.

```{r}
# Load required packages
library(leaflet)
library(leaflet.extras)  # For awesome icons

# Create a data frame with sample locations and their coordinates
sample_locations <- data.frame(
  city = c("Antioquia", "Bogotá", "Bucaramanga", "Cali", "Caloto",
           "Cartagena", "Corinto", "Cundinamarca", "Manizales", "Medellín",
           "Neiva", "Pamplona", "Pitalito", "Santa Marta", "Vijes"),
  lat = c(6.2442, 4.7110, 7.1254, 3.4516, 3.0371,
          10.3932, 3.1716, 5.0268, 5.0687, 6.2442,
          2.9273, 7.3753, 1.8479, 11.2404, 3.6997),
  lon = c(-75.5742, -74.0721, -73.1198, -76.5320, -76.4241,
          -75.4832, -76.2597, -74.0268, -75.5176, -75.5812,
          -75.2819, -72.6498, -76.0540, -74.2095, -76.4358)
)

# Create custom icon using Font Awesome cannabis leaf icon
cannabisIcon <- makeAwesomeIcon(
  icon = "cannabis",
  markerColor = "green",
  iconColor = "#003E42ff",  # Using your theme's dark green color
  library = "fa"
)

# Create the interactive map
leaflet(sample_locations) |>
  # Add different map tile layers that users can switch between
  addProviderTiles("CartoDB.Positron", group = "Light") |>
  addProviderTiles("CartoDB.DarkMatter", group = "Dark") |>
  addProviderTiles("Esri.WorldImagery", group = "Satellite") |>
  
  # Set the initial view to center on Colombia
  setView(lng = -74.2973, lat = 4.5709, zoom = 6) |>
  
  # Add markers for each location
  addAwesomeMarkers(
    ~lon, ~lat,
    popup = ~paste0(
      "<b>", city, "</b><br>",
      "Latitude: ", round(lat, 4), "<br>",
      "Longitude: ", round(lon, 4)
    ),
    label = ~city,
    icon = cannabisIcon
  ) |>
  
  # Add layer control to switch between map styles
  addLayersControl(
    baseGroups = c("Light", "Dark", "Satellite"),
    options = layersControlOptions(collapsed = FALSE)
  ) |>
  
  # Add a legend
  addLegend(
    position = "bottomright",
    colors = c("#003E42"),
    labels = c("Sample Location"),
    opacity = 0.7
  )
```

The geographical distribution spans from the Caribbean coast (Santa Marta, Cartagena) to the interior regions (Bogotá, Medellín) and southern territories (Pitalito), representing samples from various growing conditions and cultivation practices across Colombia.


# CBD by time of data collection

CBD levels show a similar pattern with small decreases over time.

```{r}
power_data |> 
    ggplot(aes(x = Date, y = cbd_total_num)) +
    geom_point(color = "#003E42ff", alpha = 0.6) +
    geom_smooth(color = "#EEC99Bff", fill = "#EEC99Bff", alpha = 0.3) +
    transparent_theme() +
    labs(title = "Evolución del CBD a lo largo del tiempo",
         x = "Fecha",
         y = "CBD (%)")
```

# THC and CBD distribution

The average THC content was found to be 12.8%, with the middle half of samples ranging from 10.3% to 15.3%. In contrast, CBD levels were much lower, averaging just 0.9%, with most samples falling between 0.2% and 1.1%. 

```{r}
library(gtsummary)

power_data |> 
    select(thc_total_num, cbd_total_num) |> 
    rename(THC = thc_total_num, CBD = cbd_total_num) |>
    tbl_summary(
      type = list(everything() ~ "continuous"),
      statistic = list(all_continuous() ~ "{mean}% ({p25}% - {p75}%) min {min} max {max}"),
      digits = list(all_continuous() ~ 1)
    )

ggsave("images/thc_cbd_distribution.png", width = 3, height = 3, dpi = 300)
```


The following plot shows the distribution of THC and CBD levels.

```{r}

power_data |> 
    select(thc_total_num, cbd_total_num) |> 
    pivot_longer(cols = everything()) |> 
    mutate(name = case_when(
        name == "thc_total_num" ~ "THC",
        name == "cbd_total_num" ~ "CBD",
        TRUE ~ name
    )) |> 
    ggplot(aes(x = value, color = name, fill = name)) +
    geom_density() +
    facet_wrap(~name, ncol = 1, scales = "free") +
    transparent_theme() +
    labs(title = "Distribución de CBD y THC",
         x = "Concentración",
         y = "") +
    scale_color_manual(values = c("CBD" = "#003E42ff", "THC" = "#003E42ff")) +
    theme(legend.position = "none") +
    scale_fill_manual(values = c("THC" = "#003E42ff", "CBD" = "#EEC99Bff")) +
    theme(strip.background = element_rect(fill = "#EEC99Bff"),
          strip.text = element_text(color = "black", family = "playfair",
          face = "bold", size = 12))

ggsave("images/thc_cbd_distribution.png", width = 3, height = 3, dpi = 300)

```

## CBD Distribution

The CBD data is highly right-skewed. This means that most samples have very low levels of CBD, with a sharp peak near zero and a long tail stretching toward higher values. In plain terms, nearly all of the samples have little CBD, and only a few show higher amounts.

## THC Distribution

In contrast, THC levels form a more bell-shaped (or normally distributed) curve. Most of the samples cluster around the middle range (around 12.8%), with fewer samples having extremely low or extremely high levels. This indicates that THC concentrations are more consistent among the samples compared to CBD.

# THC curve for comparison

::: {.panel-tabset}

## THC Distribution

The following plot visualizes the distribution of THC concentrations in cannabis samples. The curve shows how frequently different THC percentages occur in our dataset. We've marked key points in the curve:

- The dashed vertical lines indicate the 25th percentile (Q1), mean, and 75th percentile (Q3)
- Q1 (25th percentile): 25% of samples have THC levels below this value
- Mean: The average THC concentration across all samples
- Q3 (75th percentile): 75% of samples have THC levels below this value

This visualization helps you understand where a specific THC percentage falls within the overall distribution of cannabis potency in our dataset.

```{r}
power_data |> 
    select(thc_total_num, cbd_total_num) |> 
    pivot_longer(cols = everything()) |> 
    mutate(name = case_when(
        name == "thc_total_num" ~ "THC",
        name == "cbd_total_num" ~ "CBD",
        TRUE ~ name
    )) |> 
    filter(name == "THC") |> 
    ggplot(aes(x = value, color = name, fill = name)) +
    geom_density(alpha = 0.3) +
    geom_vline(aes(xintercept = quantile(value, 0.25)), 
               linetype = "dashed", color = "#003E42ff", alpha = 0.7) +
    geom_vline(aes(xintercept = quantile(value, 0.75)), 
               linetype = "dashed", color = "#003E42ff", alpha = 0.7) +
    geom_vline(aes(xintercept = mean(value)), 
               linetype = "dashed", color = "#003E42ff") +
    annotate("text", 
             x = c(quantile(power_data$thc_total_num, 0.25),
                   quantile(power_data$thc_total_num, 0.75)),
             y = c(0, 0),
             label = c("Q1: 25%", "Q3: 75%"),
             vjust = -0.5,
             family = "lato",
             color = "#003E42ff") +
    annotate("text", x = Inf, y = Inf,
             label = sprintf("Mean: %.1f%%\nSD: ±%.1f%%\nQ1: %.1f%%\nQ3: %.1f%%", 
                           mean(power_data$thc_total_num),
                           sd(power_data$thc_total_num),
                           quantile(power_data$thc_total_num, 0.25),
                           quantile(power_data$thc_total_num, 0.75)),
             hjust = 1.1, vjust = 1.1,
             family = "lato") +
    transparent_theme() +
    labs(title = "",
         x = "THC (%)",
         y = "Density",
         caption = "If your sample has 15.4% THC, it sits just above the 75th percentile. \nIn other words, it contains more THC than about three-quarters \n of all the samples in the dataset, placing it among the \n top 25% with the highest THC levels.") +
    scale_color_manual(values = c("THC" = "#003E42ff")) +
    scale_fill_manual(values = c("THC" = "#003E42ff")) +
    theme(legend.position = "none",
          plot.caption = element_text(hjust = 0, size = 10))

ggsave("images/thc_distribution.png", width = 3, height = 3, dpi = 600)

```

```{r eval = FALSE}

power_data |> 
    select(cbd_total_num) |> 
    ggplot(aes(x = cbd_total_num)) +
    geom_histogram(bins = 30, fill = "skyblue", color = "black") +
    scale_x_log10() +
  labs(title = "Distribución de CBD (Eje X en escala logarítmica)",
       x = "CBD (escala logarítmica)",
       y = "Densidad (escala logarítmica)")

power_data |> 
    select(cbd_total_num) |> 
    ggplot(aes(x = cbd_total_num)) +
    geom_density(fill = "orange", alpha = 0.5) +
    scale_x_log10() +
  scale_y_log10() +  # This makes the y-axis log scale too
    labs(title = "Distribución de CBD en escala logarítmica",
       x = "CBD (escala logarítmica)",
       y = "Densidad (escala logarítmica)")
```

## Interactive THC Distribution

```{shinylive-r}
#| standalone: true
#| components: [viewer]
#| layout: vertical
#| viewerHeight: 700
library(shiny)
library(ggplot2)

# Calculate statistics from the data
MEAN_THC <- 12.8
SD_THC <- 3.2
Q1_THC <- 10.3
Q3_THC <- 15.3

ui <- fluidPage(
  titlePanel("Compare Your THC Level"),
  sidebarLayout(
    sidebarPanel(
      numericInput("thc_value", 
                  "Enter your sample's THC %:", 
                  value = MEAN_THC,  # Set default to mean
                  min = 4,
                  max = 30,
                  step = 0.1),
      textOutput("percentile_text")
    ),
    mainPanel(
      plotOutput("thc_plot", height = "400px")
    )
  )
)

server <- function(input, output) {
  # Generate distribution data
  x <- seq(4, 25, length.out = 1000)
  density_data <- data.frame(
    x = x,
    y = dnorm(x, mean = MEAN_THC, sd = SD_THC)
  )
  
  # Reactive value for validated THC input
  valid_thc <- reactive({
    if (is.null(input$thc_value) || is.na(input$thc_value)) {
      return(MEAN_THC)  # Return mean if input is null or NA
    }
    return(input$thc_value)
  })
  
  output$thc_plot <- renderPlot({
    # Use validated THC value
    thc_value <- valid_thc()
    
    ggplot() +
      # Plot density curve
      geom_line(data = density_data, aes(x = x, y = y), 
                color = "#003E42ff", size = 1) +
      geom_area(data = density_data, aes(x = x, y = y), 
                fill = "#003E42ff", alpha = 0.3) +
      # Add reference lines
      geom_vline(xintercept = Q1_THC, 
                 linetype = "dashed", color = "#003E42ff", alpha = 0.7) +
      geom_vline(xintercept = Q3_THC, 
                 linetype = "dashed", color = "#003E42ff", alpha = 0.7) +
      geom_vline(xintercept = MEAN_THC, 
                 linetype = "dashed", color = "#003E42ff") +
      # Add user's THC value (only if valid)
      geom_vline(xintercept = thc_value, 
                 color = "#EEC99Bff", size = 1.5) +
      # Add labels
      annotate("text", 
               x = c(Q1_THC, Q3_THC),
               y = c(0, 0),
               label = c("Q1: 25%", "Q3: 75%"),
               vjust = -0.5,
               color = "#003E42ff") +
      # Customize theme
      theme_minimal() +
      labs(title = "THC Distribution with Your Sample",
           x = "THC (%)",
           y = "Density") +
      theme(
        text = element_text(family = "sans-serif"),
        plot.title = element_text(face = "bold"),
        panel.background = element_rect(fill = "#f8f9fa", color = NA),
        plot.background = element_rect(fill = "#f8f9fa", color = NA)
      )
  })
  
  output$percentile_text <- renderText({
    # Use validated THC value
    value <- valid_thc()
    
    if (is.null(value) || is.na(value)) {
      return("Please enter a valid THC value")
    }
    
    if (value < Q1_THC) {
      sprintf("Your sample's THC level (%.1f%%) is below the 25th percentile (Q1: %.1f%%)", 
             value, Q1_THC)
    } else if (value > Q3_THC) {
      sprintf("Your sample's THC level (%.1f%%) is above the 75th percentile (Q3: %.1f%%)", 
             value, Q3_THC)
    } else {
      sprintf("Your sample's THC level (%.1f%%) is between the 25th and 75th percentiles (Q1: %.1f%%, Q3: %.1f%%)", 
             value, Q1_THC, Q3_THC)
    }
  })
}

shinyApp(ui, server)
```

This interactive visualization:

1. Shows the THC distribution curve
2. Displays reference lines for Q1 (25th percentile), median, and Q3 (75th percentile)
3. Allows you to input your sample's THC percentage
4. Shows your value as an amber-colored vertical line on the plot
5. Provides text feedback about where your sample falls in the distribution


:::




# THC/CBD ratio

Our analysis shows that THC and CBD have an inverse relationship - when one goes up, the other tends to go down. This pattern is most clear in samples with less than 10% THC. In samples with higher THC content (above 10%), this inverse relationship still exists but becomes weaker.

```{r}
power_data |> 
    select(thc_total_num, cbd_total_num) |> 
    filter(thc_total_num >= 4) |> 
    rename(THC = thc_total_num, CBD = cbd_total_num) |> 
    ggplot(aes(x = THC, y = CBD, color = "THC", fill = "THC")) +
    geom_point() +
    geom_smooth() +
    transparent_theme() +
    labs(title = "Correlation between THC and CBD",
         x = "THC (%)",
         y = "CBD (%)") +
    scale_color_manual(values = c("CBD" = "#003E42ff", "THC" = "#003E42ff")) +
    theme(legend.position = "none") +
    scale_fill_manual(values = c("THC" = "#003E42ff", "CBD" = "#EEC99Bff")) +
    theme(strip.background = element_rect(fill = "#EEC99Bff"),
          strip.text = element_text(color = "black", family = "playfair",
          face = "bold", size = 12))

ggsave("images/thc_cbd_relationship.png", width = 3, height = 3, dpi = 300)

```

```{r}
library(corrr)
# Calculate correlation and save it
thc_cbd_corr <- power_data |> 
    select(thc_total_num, cbd_total_num) |> 
    filter(thc_total_num >= 10) |> 
    rename(THC = thc_total_num, CBD = cbd_total_num) |> 
    correlate() |>
    shave()  |> 
    filter(!is.na(THC)) |> 
    pull(THC)

```

When we look at the correlation between THC and CBD using the samples with more than 10% THC, we see that the negative correlation is `r round(thc_cbd_corr, 2)` which indicates a negative relationship between the two compounds but it's not very strong.^[In correlation analysis, values between 0 and ±0.3 are considered weak, ±0.3 to ±0.7 moderate, and ±0.7 to ±1.0 strong. Our correlation falls in the weak to moderate range, suggesting the relationship isn't strong.]

```{r eval = FALSE}
power_data |> 
    select(thc_total_num, cbd_total_num) |> 
    rename(THC = thc_total_num, CBD = cbd_total_num) |> 
    mutate(ratio = THC / CBD) |> 
    mutate(type = "ratio") |> 
    ggplot(aes(x = ratio, color = type, fill = type)) +
    geom_density() +
    theme_minimal() +
    labs(title = "Distribución ratio THC/CBD",
         x = "THC/CBD",
         y = "") +
    scale_color_manual(values = "#003E42ff") +
    scale_fill_manual(values = "#EEC99Bff") +
    theme(legend.position = "none") +
    theme(strip.background = element_rect(fill = "#EEC99Bff"),
          strip.text = element_text(color = "black", family = "roboto",
          face = "bold", size = 12),
          axis.text = element_text(family = "roboto", size = 12),
          axis.title = element_text(family = "roboto", size = 12),
          plot.title = element_text(family = "roboto", size = 12)) 

#ggsave("mayor_4_thc_cbd_ratio_distribution.png", width = 3, height = 3, dpi = 300)


```


```{r eval = FALSE}
power_data |> 
    select(thc_total_num, cbd_total_num) |> 
    filter(thc_total_num >= 4) |> 
    rename(THC = thc_total_num, CBD = cbd_total_num) |> 
    mutate(Potency = THC + CBD)  |> 
    mutate(type = "potency") |> 
    ggplot(aes(x = Potency, color = type, fill = type)) +
    geom_density() +
    theme_minimal() +
    labs(title = "Distribución de la potencia THC/CBD",
         x = "Potencia",
         y = "") +
    scale_color_manual(values = "black") +
    scale_fill_manual(values = "green") +
    theme(legend.position = "none") +
    theme(strip.background = element_rect(fill = "#EEC99Bff"),
          strip.text = element_text(color = "black", family = "roboto",
          face = "bold", size = 12),
          axis.text = element_text(family = "roboto", size = 12),
          axis.title = element_text(family = "roboto", size = 12),
          plot.title = element_text(family = "roboto", size = 12))

ggsave("images/thc_cbd_potency_distribution.png", width = 3, height = 3, dpi = 300)
```

# Summary of Findings

Our analysis of 533 cannabis samples collected between 2020 and 2024 reveals several key insights:

## THC Content
- **Average THC:** 12.8%, with the middle half of samples ranging from 10.3% to 15.3%
- THC levels follow a relatively normal distribution, indicating consistency across samples
- There is a noticeable upward trend in THC content in more recent samples

## CBD Content
- **Average CBD:** 0.9%, with most samples containing between 0.2% and 1.1%
- CBD distribution is highly right-skewed, with most samples having very low levels
- CBD levels show a slight downward trend over the collection period

## Relationship Between THC and CBD
- There is an inverse relationship between THC and CBD levels
- This negative correlation is strongest when THC is below 10%
- As THC levels increase beyond 10%, the relationship becomes less pronounced

These findings highlight the predominance of high-THC, low-CBD cannabis in the samples analyzed, with a trend toward increasing THC potency over time. This information can be valuable for consumers, producers, and regulators in understanding the current cannabis market landscape.
